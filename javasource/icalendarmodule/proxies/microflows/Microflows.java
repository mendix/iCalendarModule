// This file was generated by Mendix Modeler 6.0.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package icalendarmodule.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.MendixRuntimeException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Microflows
{
	// These are the microflows for the iCalendarModule module

	public static void acr_Appointment_CreateUID(IContext context, icalendarmodule.proxies.AppointmentTemplate _appointment)
	{
		try
		{
			Map<String, Object> params = new HashMap<String, Object>();
			params.put("Appointment", _appointment == null ? null : _appointment.getMendixObject());
			Core.execute(context, "iCalendarModule.Acr_Appointment_CreateUID", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}

	public static void appointment_Delete(IContext context, icalendarmodule.proxies.Appointment _appointment)
	{
		try
		{
			Map<String, Object> params = new HashMap<String, Object>();
			params.put("Appointment", _appointment == null ? null : _appointment.getMendixObject());
			Core.execute(context, "iCalendarModule.Appointment_Delete", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}

	public static boolean bDel_Appointment_Cancel(IContext context, icalendarmodule.proxies.Appointment _appointment)
	{
		try
		{
			Map<String, Object> params = new HashMap<String, Object>();
			params.put("Appointment", _appointment == null ? null : _appointment.getMendixObject());
			return (Boolean)Core.execute(context, "iCalendarModule.BDel_Appointment_Cancel", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}

	public static icalendarmodule.proxies.AppointmentSelectionHelper dSO_AppointmentSelectionHelper(IContext context)
	{
		try
		{
			Map<String, Object> params = new HashMap<String, Object>();
			IMendixObject result = (IMendixObject)Core.execute(context, "iCalendarModule.DSO_AppointmentSelectionHelper", params);
			return result == null ? null : icalendarmodule.proxies.AppointmentSelectionHelper.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}

	public static icalendarmodule.proxies.SMTPSettings dSO_SMTPSettings(IContext context)
	{
		try
		{
			Map<String, Object> params = new HashMap<String, Object>();
			IMendixObject result = (IMendixObject)Core.execute(context, "iCalendarModule.DSO_SMTPSettings", params);
			return result == null ? null : icalendarmodule.proxies.SMTPSettings.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}

	public static void iVK_Appointment_Edit(IContext context, icalendarmodule.proxies.Appointment _appointment)
	{
		try
		{
			Map<String, Object> params = new HashMap<String, Object>();
			params.put("Appointment", _appointment == null ? null : _appointment.getMendixObject());
			Core.execute(context, "iCalendarModule.IVK_Appointment_Edit", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}

	public static void iVK_Appointment_New(IContext context)
	{
		try
		{
			Map<String, Object> params = new HashMap<String, Object>();
			Core.execute(context, "iCalendarModule.IVK_Appointment_New", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}

	public static void iVK_Appointment_Save(IContext context, icalendarmodule.proxies.Appointment _appointment)
	{
		try
		{
			Map<String, Object> params = new HashMap<String, Object>();
			params.put("Appointment", _appointment == null ? null : _appointment.getMendixObject());
			Core.execute(context, "iCalendarModule.IVK_Appointment_Save", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}

	public static icalendarmodule.proxies.AppointmentNotification iVK_Create_AppointmentNotification(IContext context, icalendarmodule.proxies.Appointment _appointment, icalendarmodule.proxies.NotificationType _notificationType)
	{
		try
		{
			Map<String, Object> params = new HashMap<String, Object>();
			params.put("Appointment", _appointment == null ? null : _appointment.getMendixObject());
			params.put("NotificationType", _notificationType == null ? null : _notificationType.name());
			IMendixObject result = (IMendixObject)Core.execute(context, "iCalendarModule.IVK_Create_AppointmentNotification", params);
			return result == null ? null : icalendarmodule.proxies.AppointmentNotification.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}

	public static void iVK_SelectAppoinment(IContext context, icalendarmodule.proxies.Appointment _appointment, icalendarmodule.proxies.AppointmentSelectionHelper _appointmentSelectionHelper)
	{
		try
		{
			Map<String, Object> params = new HashMap<String, Object>();
			params.put("Appointment", _appointment == null ? null : _appointment.getMendixObject());
			params.put("AppointmentSelectionHelper", _appointmentSelectionHelper == null ? null : _appointmentSelectionHelper.getMendixObject());
			Core.execute(context, "iCalendarModule.IVK_SelectAppoinment", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}

	public static void sE_Appointment_ProcessQueue(IContext context)
	{
		try
		{
			Map<String, Object> params = new HashMap<String, Object>();
			Core.execute(context, "iCalendarModule.SE_Appointment_ProcessQueue", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}

	public static void sMTPSettings_Save(IContext context, icalendarmodule.proxies.SMTPSettings _sMTPSettings)
	{
		try
		{
			Map<String, Object> params = new HashMap<String, Object>();
			params.put("SMTPSettings", _sMTPSettings == null ? null : _sMTPSettings.getMendixObject());
			Core.execute(context, "iCalendarModule.SMTPSettings_Save", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}

	public static icalendarmodule.proxies.AppointmentNotification sUB_AppointmentNotification_Create(IContext context, icalendarmodule.proxies.Appointment _appointment, icalendarmodule.proxies.NotificationType _notificationType)
	{
		try
		{
			Map<String, Object> params = new HashMap<String, Object>();
			params.put("Appointment", _appointment == null ? null : _appointment.getMendixObject());
			params.put("NotificationType", _notificationType == null ? null : _notificationType.name());
			IMendixObject result = (IMendixObject)Core.execute(context, "iCalendarModule.SUB_AppointmentNotification_Create", params);
			return result == null ? null : icalendarmodule.proxies.AppointmentNotification.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}

	public static String sUB_AppointmentNotification_GenerateDescription(IContext context, icalendarmodule.proxies.Appointment _appointment, icalendarmodule.proxies.NotificationType _notificationType)
	{
		try
		{
			Map<String, Object> params = new HashMap<String, Object>();
			params.put("Appointment", _appointment == null ? null : _appointment.getMendixObject());
			params.put("NotificationType", _notificationType == null ? null : _notificationType.name());
			return (String)Core.execute(context, "iCalendarModule.SUB_AppointmentNotification_GenerateDescription", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}

	public static icalendarmodule.proxies.NotificationStatus sUB_AppointmentNotification_SendNotification(IContext context, icalendarmodule.proxies.AppointmentNotification _appointmentNotification)
	{
		try
		{
			Map<String, Object> params = new HashMap<String, Object>();
			params.put("AppointmentNotification", _appointmentNotification == null ? null : _appointmentNotification.getMendixObject());
			String result = (String)Core.execute(context, "iCalendarModule.SUB_AppointmentNotification_SendNotification", params);
			if (result == null)
				return null;
			return icalendarmodule.proxies.NotificationStatus.valueOf(result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
}