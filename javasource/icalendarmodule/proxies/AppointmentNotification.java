// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package icalendarmodule.proxies;

/**
 * 
 */
public class AppointmentNotification extends icalendarmodule.proxies.AppointmentTemplate
{
	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "iCalendarModule.AppointmentNotification";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		LogType("LogType"),
		LogMessage("LogMessage"),
		Status("Status"),
		ErrorMessage("ErrorMessage"),
		UID("UID"),
		UpdateSequence("UpdateSequence"),
		StartDateTime("StartDateTime"),
		EndDateTime("EndDateTime"),
		Subject("Subject"),
		BodyText("BodyText"),
		RecipientEmailAddress("RecipientEmailAddress"),
		SenderEmailAddress("SenderEmailAddress"),
		Location("Location"),
		AppointmentLog_Appointment("iCalendarModule.AppointmentLog_Appointment");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public AppointmentNotification(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "iCalendarModule.AppointmentNotification"));
	}

	protected AppointmentNotification(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject appointmentNotificationMendixObject)
	{
		super(context, appointmentNotificationMendixObject);
		if (!com.mendix.core.Core.isSubClassOf("iCalendarModule.AppointmentNotification", appointmentNotificationMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a iCalendarModule.AppointmentNotification");
	}

	/**
	 * @deprecated Use 'AppointmentNotification.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static icalendarmodule.proxies.AppointmentNotification initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return icalendarmodule.proxies.AppointmentNotification.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.getSudoContext() can be used to obtain sudo access).
	 */
	public static icalendarmodule.proxies.AppointmentNotification initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new icalendarmodule.proxies.AppointmentNotification(context, mendixObject);
	}

	public static icalendarmodule.proxies.AppointmentNotification load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return icalendarmodule.proxies.AppointmentNotification.initialize(context, mendixObject);
	}

	public static java.util.List<icalendarmodule.proxies.AppointmentNotification> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<icalendarmodule.proxies.AppointmentNotification> result = new java.util.ArrayList<icalendarmodule.proxies.AppointmentNotification>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//iCalendarModule.AppointmentNotification" + xpathConstraint))
			result.add(icalendarmodule.proxies.AppointmentNotification.initialize(context, obj));
		return result;
	}

	/**
	 * Set value of LogType
	 * @param logtype
	 */
	public final icalendarmodule.proxies.NotificationType getLogType()
	{
		return getLogType(getContext());
	}

	/**
	 * @param context
	 * @return value of LogType
	 */
	public final icalendarmodule.proxies.NotificationType getLogType(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.LogType.toString());
		if (obj == null)
			return null;

		return icalendarmodule.proxies.NotificationType.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of LogType
	 * @param logtype
	 */
	public final void setLogType(icalendarmodule.proxies.NotificationType logtype)
	{
		setLogType(getContext(), logtype);
	}

	/**
	 * Set value of LogType
	 * @param context
	 * @param logtype
	 */
	public final void setLogType(com.mendix.systemwideinterfaces.core.IContext context, icalendarmodule.proxies.NotificationType logtype)
	{
		if (logtype != null)
			getMendixObject().setValue(context, MemberNames.LogType.toString(), logtype.toString());
		else
			getMendixObject().setValue(context, MemberNames.LogType.toString(), null);
	}

	/**
	 * @return value of LogMessage
	 */
	public final String getLogMessage()
	{
		return getLogMessage(getContext());
	}

	/**
	 * @param context
	 * @return value of LogMessage
	 */
	public final String getLogMessage(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (String) getMendixObject().getValue(context, MemberNames.LogMessage.toString());
	}

	/**
	 * Set value of LogMessage
	 * @param logmessage
	 */
	public final void setLogMessage(String logmessage)
	{
		setLogMessage(getContext(), logmessage);
	}

	/**
	 * Set value of LogMessage
	 * @param context
	 * @param logmessage
	 */
	public final void setLogMessage(com.mendix.systemwideinterfaces.core.IContext context, String logmessage)
	{
		getMendixObject().setValue(context, MemberNames.LogMessage.toString(), logmessage);
	}

	/**
	 * Set value of Status
	 * @param status
	 */
	public final icalendarmodule.proxies.NotificationStatus getStatus()
	{
		return getStatus(getContext());
	}

	/**
	 * @param context
	 * @return value of Status
	 */
	public final icalendarmodule.proxies.NotificationStatus getStatus(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.Status.toString());
		if (obj == null)
			return null;

		return icalendarmodule.proxies.NotificationStatus.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of Status
	 * @param status
	 */
	public final void setStatus(icalendarmodule.proxies.NotificationStatus status)
	{
		setStatus(getContext(), status);
	}

	/**
	 * Set value of Status
	 * @param context
	 * @param status
	 */
	public final void setStatus(com.mendix.systemwideinterfaces.core.IContext context, icalendarmodule.proxies.NotificationStatus status)
	{
		if (status != null)
			getMendixObject().setValue(context, MemberNames.Status.toString(), status.toString());
		else
			getMendixObject().setValue(context, MemberNames.Status.toString(), null);
	}

	/**
	 * @return value of ErrorMessage
	 */
	public final String getErrorMessage()
	{
		return getErrorMessage(getContext());
	}

	/**
	 * @param context
	 * @return value of ErrorMessage
	 */
	public final String getErrorMessage(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (String) getMendixObject().getValue(context, MemberNames.ErrorMessage.toString());
	}

	/**
	 * Set value of ErrorMessage
	 * @param errormessage
	 */
	public final void setErrorMessage(String errormessage)
	{
		setErrorMessage(getContext(), errormessage);
	}

	/**
	 * Set value of ErrorMessage
	 * @param context
	 * @param errormessage
	 */
	public final void setErrorMessage(com.mendix.systemwideinterfaces.core.IContext context, String errormessage)
	{
		getMendixObject().setValue(context, MemberNames.ErrorMessage.toString(), errormessage);
	}

	/**
	 * @return value of AppointmentLog_Appointment
	 */
	public final icalendarmodule.proxies.Appointment getAppointmentLog_Appointment() throws com.mendix.core.CoreException
	{
		return getAppointmentLog_Appointment(getContext());
	}

	/**
	 * @param context
	 * @return value of AppointmentLog_Appointment
	 */
	public final icalendarmodule.proxies.Appointment getAppointmentLog_Appointment(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		icalendarmodule.proxies.Appointment result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.AppointmentLog_Appointment.toString());
		if (identifier != null)
			result = icalendarmodule.proxies.Appointment.load(context, identifier);
		return result;
	}

	/**
	 * Set value of AppointmentLog_Appointment
	 * @param appointmentlog_appointment
	 */
	public final void setAppointmentLog_Appointment(icalendarmodule.proxies.Appointment appointmentlog_appointment)
	{
		setAppointmentLog_Appointment(getContext(), appointmentlog_appointment);
	}

	/**
	 * Set value of AppointmentLog_Appointment
	 * @param context
	 * @param appointmentlog_appointment
	 */
	public final void setAppointmentLog_Appointment(com.mendix.systemwideinterfaces.core.IContext context, icalendarmodule.proxies.Appointment appointmentlog_appointment)
	{
		if (appointmentlog_appointment == null)
			getMendixObject().setValue(context, MemberNames.AppointmentLog_Appointment.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.AppointmentLog_Appointment.toString(), appointmentlog_appointment.getMendixObject().getId());
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final icalendarmodule.proxies.AppointmentNotification that = (icalendarmodule.proxies.AppointmentNotification) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "iCalendarModule.AppointmentNotification";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Override
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
